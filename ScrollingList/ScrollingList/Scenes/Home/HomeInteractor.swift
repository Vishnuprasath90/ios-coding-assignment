//
//  HomeInteractor.swift
//  ScrollingList
//
//  Created by Vishnu Prasath on 17/05/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func newSearchRequest(request: Home.SearchTerm.Request)
}

protocol HomeDataStore {
    var businessInfo: [BusinessInfo]? { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
    
    var presenter: HomePresentationLogic?
    var worker: HomeWorker = HomeWorker()
    var businessInfo: [BusinessInfo]?
    
    // MARK: Do something
    
    func newSearchRequest(request: Home.SearchTerm.Request) {
        guard let searchString = request.searchString else { return }
        businessInfo?.removeAll()
        worker.searchTerm = searchString
        worker.searchWithYelpAPI(completion: { [weak self] (result, error) in
            guard error == nil, let response = result as? YelpResponse else {
                self?.presenter?.presentAPIError()
                return
            }
            self?.businessInfo = response.business
            let searchResponse = Home.SearchTerm.Response(business: self?.businessInfo)
            self?.presenter?.presentResponse(response: searchResponse)
        })
    }
}

extension HomeInteractor: TableViewPresentLogic {
  func numberOfSections() -> Int {
    (self.presenter as? TableViewPresentLogic)?.numberOfSections() ?? 1
  }
  
  func numberOfRows(_ section: Int) -> Int {
    (self.presenter as? TableViewPresentLogic)?.numberOfRows(section) ?? 1
  }
  
  func modelForCell(_ indexPath: IndexPath) -> CellModel? {
    (self.presenter as? TableViewPresentLogic)?.modelForCell(indexPath)
  }
  
  func titleForHeaderInSection(_ section: Int) -> String? {
    (self.presenter as? TableViewPresentLogic)?.titleForHeaderInSection(section)
  }
  
  
}
